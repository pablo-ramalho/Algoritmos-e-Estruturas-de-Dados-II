Algoritmo de Kruskal:

1º Passo) Cortes no Grafo:
[ 6 ] - 1 -> ( 7 ) --> 
[ 7 ] - 1 -> ( 6 ) --> 
[ 2 ] - 2 -> ( 8 ) -->
[ 8 ] - 2 -> ( 2 ) --> 
[ 5 ] - 2 -> ( 6 ) -->
[ 6 ] - 2 -> ( 5 ) -->
[ 0 ] - 4 -> ( 1 ) -->
[ 1 ] - 4 -> ( 0 ) -->
[ 2 ] - 4 -> ( 5 ) -->
[ 5 ] - 4 -> ( 2 ) -->
[ 6 ] - 6 -> ( 8 ) -->
[ 8 ] - 6 -> ( 6 ) -->
[ 2 ] - 7 -> ( 3 ) -->
[ 3 ] - 7 -> ( 2 ) -->
[ 7 ] - 7 -> ( 8 ) -->
[ 8 ] - 7 -> ( 7 ) -->
[ 0 ] - 8 -> ( 7 ) -->
[ 7 ] - 8 -> ( 0 ) -->
[ 1 ] - 8 -> ( 2 ) -->
[ 2 ] - 8 -> ( 1 ) -->
[ 3 ] - 9 -> ( 4 ) -->
[ 4 ] - 9 -> ( 3 ) -->
[ 4 ] - 10 -> ( 5 ) -->
[ 5 ] - 10 -> ( 4 ) -->
[ 1 ] - 11 -> ( 7 ) -->
[ 7 ] - 11 -> ( 1 ) -->
[ 3 ] - 14 -> ( 5 ) -->
[ 5 ] - 14 -> ( 3 ) -->

2º Passo) Acrescentar arestas seguras à MST:
[ 0 ] - 4 -> ( 1 ) - 8 -> ( 7 ) -->
[ 1 ] --> 
[ 2 ] - 7 -> ( 3 ) - 4 -> ( 5 ) - 2 -> ( 8 ) -->
[ 3 ] - 7 -> ( 2 ) - 9 -> ( 4 ) -->
[ 4 ] - 9 -> ( 3 ) -->
[ 5 ] - 4 -> ( 2 ) - 2 -> ( 6 ) --> 
[ 6 ] - 2 -> ( 5 ) - 1 -> ( 7 ) -->
[ 7 ] - 8 -> ( 0 ) - 1 -> ( 6 ) -->
[ 8 ] - 2 -> ( 2 ) -->

Final Minimum Spanning Tree
[ 0 ] - 4 -> ( 1 ) - 8 -> ( 7 ) -->
[ 1 ] - 4 -> ( 0 ) -->
[ 2 ] - 7 -> ( 3 ) - 4 -> ( 5 ) - 2 -> ( 8 ) -->
[ 3 ] - 7 -> ( 2 ) - 9 -> ( 4 ) -->
[ 4 ] - 9 -> ( 3 ) -->
[ 5 ] - 4 -> ( 2 ) - 2 -> ( 6 ) --> 
[ 6 ] - 2 -> ( 5 ) - 1 -> ( 7 ) -->
[ 7 ] - 8 -> ( 0 ) - 1 -> ( 6 ) -->
[ 8 ] - 2 -> ( 2 ) -->